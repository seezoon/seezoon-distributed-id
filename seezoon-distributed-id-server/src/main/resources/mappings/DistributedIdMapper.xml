<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seezoon.domain.repository.mapper.DistributedIdMapper">
    <resultMap id="BaseResultMap" type="com.seezoon.domain.repository.po.DistributedIdPO">
        <id column="biz_tag" jdbcType="VARCHAR" property="bizTag"/>
        <result column="token" jdbcType="VARCHAR" property="token"/>
        <result column="max_id" jdbcType="BIGINT" property="maxId"/>
        <result column="step" jdbcType="INTEGER" property="step"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        t.biz_tag,t.token,t.max_id,t.step,t.description,t.create_time,t.update_time
    </sql>

    <sql id="Query_Table">
        distributed_id t
    </sql>

    <select id="selectByPrimaryKey" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Query_Table"/>
        where t.biz_tag = #{bizTag}
    </select>

    <select id="selectByCondition"
            parameterType="com.seezoon.domain.repository.po.DistributedIdPOCondition"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Query_Table"/>
        <choose>
            <when test="sortField != null and sortField != '' and sortOrder != null and sortOrder !=''">
                order by ${sortField} ${sortOrder}
            </when>
            <otherwise>
                order by t.create_time desc
            </otherwise>
        </choose>
    </select>

    <delete id="deleteByPrimaryKey">
        delete t from distributed_id t
        where t.biz_tag in
        <foreach item="item" collection="array" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <insert id="insert">
        insert into distributed_id (biz_tag,token,max_id,step,description,create_time,update_time)
        values
        <foreach item="item" collection="array" separator=",">
            (#{item.bizTag},#{item.token},#{item.maxId},#{item.step},#{item.description},#{item.createTime},#{item.updateTime})
        </foreach>
    </insert>
    <update id="updateMaxId">
        update distributed_id
        SET max_id      = max_id + step,
            update_time = NOW()
        WHERE biz_tag = #{bizTag}
    </update>

    <update id="updateMaxIdByStep">
        update distributed_id
        SET max_id      = max_id + #{step},
            update_time = NOW()
        WHERE biz_tag = #{bizTag}
    </update>

    <update id="updateByPrimaryKeySelective"
            parameterType="com.seezoon.domain.repository.po.DistributedIdPO">
        update distributed_id t
        <set>
            <if test="token != null">
                t.token = #{token},
            </if>
            <if test="maxId != null">
                t.max_id = #{maxId},
            </if>
            <if test="step != null">
                t.step = #{step},
            </if>
            <if test="description != null">
                t.description = #{description},
            </if>
            <if test="updateTime != null">
                t.update_time = #{updateTime}
            </if>
        </set>
        where t.biz_tag = #{bizTag}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.seezoon.domain.repository.po.DistributedIdPO">
        update distributed_id t
        set t.token       = #{token}
          , t.max_id      = #{maxId}
          , t.step        = #{step}
          , t.description = #{description}
          , t.update_time = #{updateTime}
        where t.biz_tag = #{bizTag}
    </update>
</mapper>